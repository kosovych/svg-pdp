{"version":3,"sources":["src/js/node_modules/browser-pack/_prelude.js","src/js/node_modules/prismjs/components.js","src/js/node_modules/prismjs/prism.js","src/js/src/js/main.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","core","meta","path","option","themes","link","exclusive","prism","title","prism-dark","prism-funky","prism-okaidia","owner","prism-twilight","prism-coy","prism-solarizedlight","prism-tomorrow","languages","noCSS","examplesPath","addCheckAll","markup","alias","aliasTitles","html","xml","svg","mathml","css","modify","clike","overrideExampleHeader","javascript","abap","abnf","actionscript","ada","antlr4","apacheconf","apl","applescript","aql","arduino","arff","asciidoc","asm6502","aspnet","autohotkey","autoit","bash","shell","basic","batch","bbcode","bison","bnf","rbnf","brainfuck","brightscript","bro","csharp","cpp","cil","coffeescript","cmake","clojure","crystal","csp","css-extras","d","dart","diff","django","dns-zone-file","docker","ebnf","eiffel","ejs","elixir","elm","etlua","erb","erlang","fsharp","firestore-security-rules","flow","fortran","ftl","gcode","gdscript","gedcom","gherkin","git","glsl","gml","go","graphql","groovy","haml","optional","handlebars","haskell","haxe","hcl","http","hpkp","hsts","ichigojam","icon","inform7","ini","io","j","java","javadoc","javadoclike","javastacktrace","jolie","jq","jsdoc","js-extras","js-templates","json","jsonp","json5","julia","keyman","kotlin","latex","tex","context","less","lilypond","liquid","lisp","livescript","lolcode","lua","makefile","markdown","markup-templating","matlab","mel","mizar","monkey","moonscript","n1ql","n4js","nand2tetris-hdl","nasm","nginx","nim","nix","nsis","objectivec","ocaml","opencl","oz","parigp","parser","pascal","objectpascal","pascaligo","pcaxis","perl","php","phpdoc","php-extras","plsql","powershell","processing","prolog","properties","protobuf","pug","puppet","pure","python","q","qore","jsx","tsx","renpy","reason","regex","rest","rip","roboconf","robotframework","ruby","rust","sas","peerDependencies","sass","scss","scala","scheme","shell-session","smalltalk","smarty","solidity","soy","sparql","splunk-spl","sqf","sql","stylus","swift","tap","tcl","textile","toml","tt2","turtle","trig","twig","typescript","t4-cs","t4-vb","t4-templating","vala","vbnet","velocity","verilog","vhdl","vim","visual-basic","wasm","wiki","xeora","xeoracube","xojo","xquery","yaml","zig","plugins","line-highlight","description","line-numbers","show-invisibles","autolinker","wpd","custom-class","file-highlight","show-language","jsonp-highlight","highlight-keywords","remove-initial-line-feed","inline-color","previewers","autoloader","keep-markup","command-line","unescaped-markup","normalize-whitespace","data-uri-highlight","toolbar","copy-to-clipboard","download-button","match-braces","diff-highlight","filter-highlight-all","Prism","_self","lang","uniqueId","_","manual","disableWorkerMessageHandler","util","encode","tokens","Token","type","content","Array","isArray","map","replace","Object","prototype","toString","slice","objId","obj","defineProperty","value","clone","deepClone","visited","id","key","hasOwnProperty","forEach","v","getLanguage","element","test","className","parentElement","match","toLowerCase","currentScript","document","err","src","exec","stack","scripts","getElementsByTagName","extend","redef","insertBefore","inside","before","insert","root","grammar","ret","token","newToken","old","DFS","this","callback","property","propertyType","highlightAll","async","highlightAllUnder","container","env","selector","hooks","run","elements","apply","querySelectorAll","highlightElement","language","parent","parentNode","nodeName","textContent","insertHighlightedCode","highlightedCode","innerHTML","Worker","worker","filename","onmessage","evt","data","postMessage","JSON","stringify","immediateClose","highlight","text","tokenize","matchGrammar","strarr","index","startPos","oneshot","target","patterns","pattern","lookbehind","greedy","lookbehindLength","global","flags","RegExp","source","pos","str","lastIndex","from","to","k","len","delNum","after","args","push","wrapped","splice","all","add","name","callbacks","matchedStr","join","tag","classes","attributes","aliases","keys","addEventListener","message","parse","close","script","hasAttribute","highlightAutomaticallyCallback","readyState","defer","window","requestAnimationFrame","setTimeout","WorkerGlobalScope","self","comment","doctype","cdata","punctuation","namespace","attr-value","attr-name","entity","tagName","includedCdataInside","included-cdata","def","string","atrule","rule","url","function","important","addInlined","style-attr","class-name","keyword","boolean","number","operator","function-variable","parameter","constant","template-string","template-punctuation","interpolation","interpolation-punctuation","js","querySelector","fileHighlight","Extensions","py","rb","ps1","psm1","sh","bat","h","pre","getAttribute","extension","createElement","appendChild","xhr","XMLHttpRequest","open","onreadystatechange","status","responseText","setAttribute","statusText","send","textArea","getElementById","event","el","DOMParser","parseFromString","documentElement"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","var components = {\"core\":{\"meta\":{\"path\":\"components/prism-core.js\",\"option\":\"mandatory\"},\"core\":\"Core\"},\"themes\":{\"meta\":{\"path\":\"themes/{id}.css\",\"link\":\"index.html?theme={id}\",\"exclusive\":true},\"prism\":{\"title\":\"Default\",\"option\":\"default\"},\"prism-dark\":\"Dark\",\"prism-funky\":\"Funky\",\"prism-okaidia\":{\"title\":\"Okaidia\",\"owner\":\"ocodia\"},\"prism-twilight\":{\"title\":\"Twilight\",\"owner\":\"remybach\"},\"prism-coy\":{\"title\":\"Coy\",\"owner\":\"tshedor\"},\"prism-solarizedlight\":{\"title\":\"Solarized Light\",\"owner\":\"hectormatos2011 \"},\"prism-tomorrow\":{\"title\":\"Tomorrow Night\",\"owner\":\"Rosey\"}},\"languages\":{\"meta\":{\"path\":\"components/prism-{id}\",\"noCSS\":true,\"examplesPath\":\"examples/prism-{id}\",\"addCheckAll\":true},\"markup\":{\"title\":\"Markup\",\"alias\":[\"html\",\"xml\",\"svg\",\"mathml\"],\"aliasTitles\":{\"html\":\"HTML\",\"xml\":\"XML\",\"svg\":\"SVG\",\"mathml\":\"MathML\"},\"option\":\"default\"},\"css\":{\"title\":\"CSS\",\"option\":\"default\",\"modify\":\"markup\"},\"clike\":{\"title\":\"C-like\",\"option\":\"default\",\"overrideExampleHeader\":true},\"javascript\":{\"title\":\"JavaScript\",\"require\":\"clike\",\"modify\":\"markup\",\"alias\":\"js\",\"option\":\"default\"},\"abap\":{\"title\":\"ABAP\",\"owner\":\"dellagustin\"},\"abnf\":{\"title\":\"Augmented Backus–Naur form\",\"owner\":\"RunDevelopment\"},\"actionscript\":{\"title\":\"ActionScript\",\"require\":\"javascript\",\"modify\":\"markup\",\"owner\":\"Golmote\"},\"ada\":{\"title\":\"Ada\",\"owner\":\"Lucretia\"},\"antlr4\":{\"title\":\"ANTLR4\",\"alias\":\"g4\",\"owner\":\"RunDevelopment\"},\"apacheconf\":{\"title\":\"Apache Configuration\",\"owner\":\"GuiTeK\"},\"apl\":{\"title\":\"APL\",\"owner\":\"ngn\"},\"applescript\":{\"title\":\"AppleScript\",\"owner\":\"Golmote\"},\"aql\":{\"title\":\"AQL\",\"owner\":\"RunDevelopment\"},\"arduino\":{\"title\":\"Arduino\",\"require\":\"cpp\",\"owner\":\"eisbehr-\"},\"arff\":{\"title\":\"ARFF\",\"owner\":\"Golmote\"},\"asciidoc\":{\"alias\":\"adoc\",\"title\":\"AsciiDoc\",\"owner\":\"Golmote\"},\"asm6502\":{\"title\":\"6502 Assembly\",\"owner\":\"kzurawel\"},\"aspnet\":{\"title\":\"ASP.NET (C#)\",\"require\":[\"markup\",\"csharp\"],\"owner\":\"nauzilus\"},\"autohotkey\":{\"title\":\"AutoHotkey\",\"owner\":\"aviaryan\"},\"autoit\":{\"title\":\"AutoIt\",\"owner\":\"Golmote\"},\"bash\":{\"title\":\"Bash\",\"alias\":\"shell\",\"aliasTitles\":{\"shell\":\"Shell\"},\"owner\":\"zeitgeist87\"},\"basic\":{\"title\":\"BASIC\",\"owner\":\"Golmote\"},\"batch\":{\"title\":\"Batch\",\"owner\":\"Golmote\"},\"bbcode\":{\"title\":\"BBcode\",\"owner\":\"RunDevelopment\"},\"bison\":{\"title\":\"Bison\",\"require\":\"c\",\"owner\":\"Golmote\"},\"bnf\":{\"title\":\"Backus–Naur form\",\"alias\":\"rbnf\",\"aliasTitles\":{\"rbnf\":\"Routing Backus–Naur form\"},\"owner\":\"RunDevelopment\"},\"brainfuck\":{\"title\":\"Brainfuck\",\"owner\":\"Golmote\"},\"brightscript\":{\"title\":\"BrightScript\",\"owner\":\"RunDevelopment\"},\"bro\":{\"title\":\"Bro\",\"owner\":\"wayward710\"},\"c\":{\"title\":\"C\",\"require\":\"clike\",\"owner\":\"zeitgeist87\"},\"csharp\":{\"title\":\"C#\",\"require\":\"clike\",\"alias\":[\"cs\",\"dotnet\"],\"owner\":\"mvalipour\"},\"cpp\":{\"title\":\"C++\",\"require\":\"c\",\"owner\":\"zeitgeist87\"},\"cil\":{\"title\":\"CIL\",\"owner\":\"sbrl\"},\"coffeescript\":{\"title\":\"CoffeeScript\",\"require\":\"javascript\",\"alias\":\"coffee\",\"owner\":\"R-osey\"},\"cmake\":{\"title\":\"CMake\",\"owner\":\"mjrogozinski\"},\"clojure\":{\"title\":\"Clojure\",\"owner\":\"troglotit\"},\"crystal\":{\"title\":\"Crystal\",\"require\":\"ruby\",\"owner\":\"MakeNowJust\"},\"csp\":{\"title\":\"Content-Security-Policy\",\"owner\":\"ScottHelme\"},\"css-extras\":{\"title\":\"CSS Extras\",\"require\":\"css\",\"modify\":\"css\",\"owner\":\"milesj\"},\"d\":{\"title\":\"D\",\"require\":\"clike\",\"owner\":\"Golmote\"},\"dart\":{\"title\":\"Dart\",\"require\":\"clike\",\"owner\":\"Golmote\"},\"diff\":{\"title\":\"Diff\",\"owner\":\"uranusjr\"},\"django\":{\"title\":\"Django/Jinja2\",\"require\":\"markup-templating\",\"alias\":\"jinja2\",\"owner\":\"romanvm\"},\"dns-zone-file\":{\"title\":\"DNS zone file\",\"owner\":\"RunDevelopment\",\"alias\":\"dns-zone\"},\"docker\":{\"title\":\"Docker\",\"alias\":\"dockerfile\",\"owner\":\"JustinBeckwith\"},\"ebnf\":{\"title\":\"Extended Backus–Naur form\",\"owner\":\"RunDevelopment\"},\"eiffel\":{\"title\":\"Eiffel\",\"owner\":\"Conaclos\"},\"ejs\":{\"title\":\"EJS\",\"require\":[\"javascript\",\"markup-templating\"],\"owner\":\"RunDevelopment\"},\"elixir\":{\"title\":\"Elixir\",\"owner\":\"Golmote\"},\"elm\":{\"title\":\"Elm\",\"owner\":\"zwilias\"},\"etlua\":{\"title\":\"Embedded Lua templating\",\"require\":[\"lua\",\"markup-templating\"],\"owner\":\"RunDevelopment\"},\"erb\":{\"title\":\"ERB\",\"require\":[\"ruby\",\"markup-templating\"],\"owner\":\"Golmote\"},\"erlang\":{\"title\":\"Erlang\",\"owner\":\"Golmote\"},\"fsharp\":{\"title\":\"F#\",\"require\":\"clike\",\"owner\":\"simonreynolds7\"},\"firestore-security-rules\":{\"title\":\"Firestore security rules\",\"require\":\"clike\",\"owner\":\"RunDevelopment\"},\"flow\":{\"title\":\"Flow\",\"require\":\"javascript\",\"owner\":\"Golmote\"},\"fortran\":{\"title\":\"Fortran\",\"owner\":\"Golmote\"},\"ftl\":{\"title\":\"FreeMarker Template Language\",\"require\":\"markup-templating\",\"owner\":\"RunDevelopment\"},\"gcode\":{\"title\":\"G-code\",\"owner\":\"RunDevelopment\"},\"gdscript\":{\"title\":\"GDScript\",\"owner\":\"RunDevelopment\"},\"gedcom\":{\"title\":\"GEDCOM\",\"owner\":\"Golmote\"},\"gherkin\":{\"title\":\"Gherkin\",\"owner\":\"hason\"},\"git\":{\"title\":\"Git\",\"owner\":\"lgiraudel\"},\"glsl\":{\"title\":\"GLSL\",\"require\":\"clike\",\"owner\":\"Golmote\"},\"gml\":{\"title\":\"GameMaker Language\",\"alias\":\"gamemakerlanguage\",\"require\":\"clike\",\"owner\":\"LiarOnce\"},\"go\":{\"title\":\"Go\",\"require\":\"clike\",\"owner\":\"arnehormann\"},\"graphql\":{\"title\":\"GraphQL\",\"owner\":\"Golmote\"},\"groovy\":{\"title\":\"Groovy\",\"require\":\"clike\",\"owner\":\"robfletcher\"},\"haml\":{\"title\":\"Haml\",\"require\":\"ruby\",\"optional\":[\"css\",\"css-extras\",\"coffeescript\",\"erb\",\"javascript\",\"less\",\"markdown\",\"ruby\",\"scss\",\"textile\"],\"owner\":\"Golmote\"},\"handlebars\":{\"title\":\"Handlebars\",\"require\":\"markup-templating\",\"owner\":\"Golmote\"},\"haskell\":{\"title\":\"Haskell\",\"alias\":\"hs\",\"owner\":\"bholst\"},\"haxe\":{\"title\":\"Haxe\",\"require\":\"clike\",\"owner\":\"Golmote\"},\"hcl\":{\"title\":\"HCL\",\"owner\":\"outsideris\"},\"http\":{\"title\":\"HTTP\",\"optional\":[\"css\",\"javascript\",\"json\",\"markup\"],\"owner\":\"danielgtaylor\"},\"hpkp\":{\"title\":\"HTTP Public-Key-Pins\",\"owner\":\"ScottHelme\"},\"hsts\":{\"title\":\"HTTP Strict-Transport-Security\",\"owner\":\"ScottHelme\"},\"ichigojam\":{\"title\":\"IchigoJam\",\"owner\":\"BlueCocoa\"},\"icon\":{\"title\":\"Icon\",\"owner\":\"Golmote\"},\"inform7\":{\"title\":\"Inform 7\",\"owner\":\"Golmote\"},\"ini\":{\"title\":\"Ini\",\"owner\":\"aviaryan\"},\"io\":{\"title\":\"Io\",\"owner\":\"AlesTsurko\"},\"j\":{\"title\":\"J\",\"owner\":\"Golmote\"},\"java\":{\"title\":\"Java\",\"require\":\"clike\",\"owner\":\"sherblot\"},\"javadoc\":{\"title\":\"JavaDoc\",\"require\":[\"markup\",\"java\",\"javadoclike\"],\"modify\":[\"java\"],\"optional\":[\"scala\"],\"owner\":\"RunDevelopment\"},\"javadoclike\":{\"title\":\"JavaDoc-like\",\"modify\":[\"java\",\"javascript\",\"php\"],\"owner\":\"RunDevelopment\"},\"javastacktrace\":{\"title\":\"Java stack trace\",\"owner\":\"RunDevelopment\"},\"jolie\":{\"title\":\"Jolie\",\"require\":\"clike\",\"owner\":\"thesave\"},\"jq\":{\"title\":\"JQ\",\"owner\":\"RunDevelopment\"},\"jsdoc\":{\"title\":\"JSDoc\",\"require\":[\"javascript\",\"javadoclike\"],\"modify\":\"javascript\",\"optional\":[\"actionscript\",\"coffeescript\"],\"owner\":\"RunDevelopment\"},\"js-extras\":{\"title\":\"JS Extras\",\"require\":\"javascript\",\"modify\":\"javascript\",\"optional\":[\"actionscript\",\"coffeescript\",\"flow\",\"n4js\",\"typescript\"],\"owner\":\"RunDevelopment\"},\"js-templates\":{\"title\":\"JS Templates\",\"require\":\"javascript\",\"modify\":\"javascript\",\"optional\":[\"css\",\"css-extras\",\"graphql\",\"markdown\",\"markup\"],\"owner\":\"RunDevelopment\"},\"json\":{\"title\":\"JSON\",\"owner\":\"CupOfTea696\"},\"jsonp\":{\"title\":\"JSONP\",\"require\":\"json\",\"owner\":\"RunDevelopment\"},\"json5\":{\"title\":\"JSON5\",\"require\":\"json\",\"owner\":\"RunDevelopment\"},\"julia\":{\"title\":\"Julia\",\"owner\":\"cdagnino\"},\"keyman\":{\"title\":\"Keyman\",\"owner\":\"mcdurdin\"},\"kotlin\":{\"title\":\"Kotlin\",\"require\":\"clike\",\"owner\":\"Golmote\"},\"latex\":{\"title\":\"LaTeX\",\"alias\":[\"tex\",\"context\"],\"aliasTitles\":{\"tex\":\"TeX\",\"context\":\"ConTeXt\"},\"owner\":\"japborst\"},\"less\":{\"title\":\"Less\",\"require\":\"css\",\"optional\":\"css-extras\",\"owner\":\"Golmote\"},\"lilypond\":{\"title\":\"LilyPond\",\"require\":\"scheme\",\"alias\":\"ly\",\"owner\":\"RunDevelopment\"},\"liquid\":{\"title\":\"Liquid\",\"owner\":\"cinhtau\"},\"lisp\":{\"title\":\"Lisp\",\"alias\":[\"emacs\",\"elisp\",\"emacs-lisp\"],\"owner\":\"JuanCaicedo\"},\"livescript\":{\"title\":\"LiveScript\",\"owner\":\"Golmote\"},\"lolcode\":{\"title\":\"LOLCODE\",\"owner\":\"Golmote\"},\"lua\":{\"title\":\"Lua\",\"owner\":\"Golmote\"},\"makefile\":{\"title\":\"Makefile\",\"owner\":\"Golmote\"},\"markdown\":{\"title\":\"Markdown\",\"require\":\"markup\",\"alias\":\"md\",\"owner\":\"Golmote\"},\"markup-templating\":{\"title\":\"Markup templating\",\"require\":\"markup\",\"owner\":\"Golmote\"},\"matlab\":{\"title\":\"MATLAB\",\"owner\":\"Golmote\"},\"mel\":{\"title\":\"MEL\",\"owner\":\"Golmote\"},\"mizar\":{\"title\":\"Mizar\",\"owner\":\"Golmote\"},\"monkey\":{\"title\":\"Monkey\",\"owner\":\"Golmote\"},\"moonscript\":{\"title\":\"MoonScript\",\"alias\":\"moon\",\"owner\":\"RunDevelopment\"},\"n1ql\":{\"title\":\"N1QL\",\"owner\":\"TMWilds\"},\"n4js\":{\"title\":\"N4JS\",\"require\":\"javascript\",\"optional\":[\"jsdoc\"],\"alias\":\"n4jsd\",\"owner\":\"bsmith-n4\"},\"nand2tetris-hdl\":{\"title\":\"Nand To Tetris HDL\",\"owner\":\"stephanmax\"},\"nasm\":{\"title\":\"NASM\",\"owner\":\"rbmj\"},\"nginx\":{\"title\":\"nginx\",\"owner\":\"westonganger\",\"require\":\"clike\"},\"nim\":{\"title\":\"Nim\",\"owner\":\"Golmote\"},\"nix\":{\"title\":\"Nix\",\"owner\":\"Golmote\"},\"nsis\":{\"title\":\"NSIS\",\"owner\":\"idleberg\"},\"objectivec\":{\"title\":\"Objective-C\",\"require\":\"c\",\"owner\":\"uranusjr\"},\"ocaml\":{\"title\":\"OCaml\",\"owner\":\"Golmote\"},\"opencl\":{\"title\":\"OpenCL\",\"require\":\"cpp\",\"modify\":[\"c\",\"cpp\"],\"overrideExampleHeader\":true,\"owner\":\"Milania1\"},\"oz\":{\"title\":\"Oz\",\"owner\":\"Golmote\"},\"parigp\":{\"title\":\"PARI/GP\",\"owner\":\"Golmote\"},\"parser\":{\"title\":\"Parser\",\"require\":\"markup\",\"owner\":\"Golmote\"},\"pascal\":{\"title\":\"Pascal\",\"alias\":\"objectpascal\",\"aliasTitles\":{\"objectpascal\":\"Object Pascal\"},\"owner\":\"Golmote\"},\"pascaligo\":{\"title\":\"Pascaligo\",\"owner\":\"DefinitelyNotAGoat\"},\"pcaxis\":{\"title\":\"PC-Axis\",\"alias\":\"px\",\"owner\":\"RunDevelopment\"},\"perl\":{\"title\":\"Perl\",\"owner\":\"Golmote\"},\"php\":{\"title\":\"PHP\",\"require\":[\"clike\",\"markup-templating\"],\"owner\":\"milesj\"},\"phpdoc\":{\"title\":\"PHPDoc\",\"require\":[\"php\",\"javadoclike\"],\"modify\":\"php\",\"owner\":\"RunDevelopment\"},\"php-extras\":{\"title\":\"PHP Extras\",\"require\":\"php\",\"modify\":\"php\",\"owner\":\"milesj\"},\"plsql\":{\"title\":\"PL/SQL\",\"require\":\"sql\",\"owner\":\"Golmote\"},\"powershell\":{\"title\":\"PowerShell\",\"owner\":\"nauzilus\"},\"processing\":{\"title\":\"Processing\",\"require\":\"clike\",\"owner\":\"Golmote\"},\"prolog\":{\"title\":\"Prolog\",\"owner\":\"Golmote\"},\"properties\":{\"title\":\".properties\",\"owner\":\"Golmote\"},\"protobuf\":{\"title\":\"Protocol Buffers\",\"require\":\"clike\",\"owner\":\"just-boris\"},\"pug\":{\"title\":\"Pug\",\"require\":[\"markup\",\"javascript\"],\"optional\":[\"coffeescript\",\"ejs\",\"handlebars\",\"less\",\"livescript\",\"markdown\",\"scss\",\"stylus\",\"twig\"],\"owner\":\"Golmote\"},\"puppet\":{\"title\":\"Puppet\",\"owner\":\"Golmote\"},\"pure\":{\"title\":\"Pure\",\"optional\":[\"c\",\"cpp\",\"fortran\"],\"owner\":\"Golmote\"},\"python\":{\"title\":\"Python\",\"alias\":\"py\",\"owner\":\"multipetros\"},\"q\":{\"title\":\"Q (kdb+ database)\",\"owner\":\"Golmote\"},\"qore\":{\"title\":\"Qore\",\"require\":\"clike\",\"owner\":\"temnroegg\"},\"r\":{\"title\":\"R\",\"owner\":\"Golmote\"},\"jsx\":{\"title\":\"React JSX\",\"require\":[\"markup\",\"javascript\"],\"optional\":[\"jsdoc\",\"js-extras\",\"js-templates\"],\"owner\":\"vkbansal\"},\"tsx\":{\"title\":\"React TSX\",\"require\":[\"jsx\",\"typescript\"]},\"renpy\":{\"title\":\"Ren'py\",\"owner\":\"HyuchiaDiego\"},\"reason\":{\"title\":\"Reason\",\"require\":\"clike\",\"owner\":\"Golmote\"},\"regex\":{\"title\":\"Regex\",\"modify\":[\"actionscript\",\"coffeescript\",\"flow\",\"javascript\",\"typescript\",\"vala\"],\"owner\":\"RunDevelopment\"},\"rest\":{\"title\":\"reST (reStructuredText)\",\"owner\":\"Golmote\"},\"rip\":{\"title\":\"Rip\",\"owner\":\"ravinggenius\"},\"roboconf\":{\"title\":\"Roboconf\",\"owner\":\"Golmote\"},\"robotframework\":{\"title\":\"Robot Framework\",\"alias\":\"robot\",\"owner\":\"RunDevelopment\"},\"ruby\":{\"title\":\"Ruby\",\"require\":\"clike\",\"alias\":\"rb\",\"owner\":\"samflores\"},\"rust\":{\"title\":\"Rust\",\"owner\":\"Golmote\"},\"sas\":{\"title\":\"SAS\",\"peerDependencies\":[\"groovy\",\"lua\",\"sql\"],\"owner\":\"Golmote\"},\"sass\":{\"title\":\"Sass (Sass)\",\"require\":\"css\",\"owner\":\"Golmote\"},\"scss\":{\"title\":\"Sass (Scss)\",\"require\":\"css\",\"optional\":\"css-extras\",\"owner\":\"MoOx\"},\"scala\":{\"title\":\"Scala\",\"require\":\"java\",\"owner\":\"jozic\"},\"scheme\":{\"title\":\"Scheme\",\"owner\":\"bacchus123\"},\"shell-session\":{\"title\":\"Shell session\",\"require\":\"bash\",\"owner\":\"RunDevelopment\"},\"smalltalk\":{\"title\":\"Smalltalk\",\"owner\":\"Golmote\"},\"smarty\":{\"title\":\"Smarty\",\"require\":\"markup-templating\",\"owner\":\"Golmote\"},\"solidity\":{\"title\":\"Solidity (Ethereum)\",\"require\":\"clike\",\"owner\":\"glachaud\"},\"soy\":{\"title\":\"Soy (Closure Template)\",\"require\":\"markup-templating\",\"owner\":\"Golmote\"},\"sparql\":{\"title\":\"SPARQL\",\"require\":\"turtle\",\"owner\":\"Triply-Dev\",\"alias\":\"rq\"},\"splunk-spl\":{\"title\":\"Splunk SPL\",\"owner\":\"RunDevelopment\"},\"sqf\":{\"title\":\"SQF: Status Quo Function (Arma 3)\",\"require\":\"clike\",\"owner\":\"RunDevelopment\"},\"sql\":{\"title\":\"SQL\",\"owner\":\"multipetros\"},\"stylus\":{\"title\":\"Stylus\",\"owner\":\"vkbansal\"},\"swift\":{\"title\":\"Swift\",\"require\":\"clike\",\"owner\":\"chrischares\"},\"tap\":{\"title\":\"TAP\",\"owner\":\"isaacs\",\"require\":\"yaml\"},\"tcl\":{\"title\":\"Tcl\",\"owner\":\"PeterChaplin\"},\"textile\":{\"title\":\"Textile\",\"require\":\"markup\",\"optional\":\"css\",\"owner\":\"Golmote\"},\"toml\":{\"title\":\"TOML\",\"owner\":\"RunDevelopment\"},\"tt2\":{\"title\":\"Template Toolkit 2\",\"require\":[\"clike\",\"markup-templating\"],\"owner\":\"gflohr\"},\"turtle\":{\"title\":\"Turtle\",\"alias\":[\"trig\"],\"aliasTitles\":{\"trig\":\"TriG\"},\"owner\":\"jakubklimek\"},\"twig\":{\"title\":\"Twig\",\"require\":\"markup\",\"owner\":\"brandonkelly\"},\"typescript\":{\"title\":\"TypeScript\",\"require\":\"javascript\",\"optional\":\"js-templates\",\"alias\":\"ts\",\"owner\":\"vkbansal\"},\"t4-cs\":{\"title\":\"T4 Text Templates (C#)\",\"require\":[\"t4-templating\",\"csharp\"],\"alias\":\"t4\",\"owner\":\"RunDevelopment\"},\"t4-vb\":{\"title\":\"T4 Text Templates (VB)\",\"require\":[\"t4-templating\",\"visual-basic\"],\"owner\":\"RunDevelopment\"},\"t4-templating\":{\"title\":\"T4 templating\",\"owner\":\"RunDevelopment\"},\"vala\":{\"title\":\"Vala\",\"require\":\"clike\",\"owner\":\"TemplarVolk\"},\"vbnet\":{\"title\":\"VB.Net\",\"require\":\"basic\",\"owner\":\"Bigsby\"},\"velocity\":{\"title\":\"Velocity\",\"require\":\"markup\",\"owner\":\"Golmote\"},\"verilog\":{\"title\":\"Verilog\",\"owner\":\"a-rey\"},\"vhdl\":{\"title\":\"VHDL\",\"owner\":\"a-rey\"},\"vim\":{\"title\":\"vim\",\"owner\":\"westonganger\"},\"visual-basic\":{\"title\":\"Visual Basic\",\"alias\":\"vb\",\"owner\":\"Golmote\"},\"wasm\":{\"title\":\"WebAssembly\",\"owner\":\"Golmote\"},\"wiki\":{\"title\":\"Wiki markup\",\"require\":\"markup\",\"owner\":\"Golmote\"},\"xeora\":{\"title\":\"Xeora\",\"require\":\"markup\",\"alias\":\"xeoracube\",\"aliasTitles\":{\"xeoracube\":\"XeoraCube\"},\"owner\":\"freakmaxi\"},\"xojo\":{\"title\":\"Xojo (REALbasic)\",\"owner\":\"Golmote\"},\"xquery\":{\"title\":\"XQuery\",\"require\":\"markup\",\"owner\":\"Golmote\"},\"yaml\":{\"title\":\"YAML\",\"alias\":\"yml\",\"owner\":\"hason\"},\"zig\":{\"title\":\"Zig\",\"owner\":\"RunDevelopment\"}},\"plugins\":{\"meta\":{\"path\":\"plugins/{id}/prism-{id}\",\"link\":\"plugins/{id}/\"},\"line-highlight\":{\"title\":\"Line Highlight\",\"description\":\"Highlights specific lines and/or line ranges.\"},\"line-numbers\":{\"title\":\"Line Numbers\",\"description\":\"Line number at the beginning of code lines.\",\"owner\":\"kuba-kubula\"},\"show-invisibles\":{\"title\":\"Show Invisibles\",\"description\":\"Show hidden characters such as tabs and line breaks.\",\"optional\":[\"autolinker\",\"data-uri-highlight\"]},\"autolinker\":{\"title\":\"Autolinker\",\"description\":\"Converts URLs and emails in code to clickable links. Parses Markdown links in comments.\"},\"wpd\":{\"title\":\"WebPlatform Docs\",\"description\":\"Makes tokens link to <a href=\\\"https://webplatform.github.io/docs/\\\">WebPlatform.org documentation</a>. The links open in a new tab.\"},\"custom-class\":{\"title\":\"Custom Class\",\"description\":\"This plugin allows you to prefix Prism's default classes (<code>.comment</code> can become <code>.namespace--comment</code>) or replace them with your defined ones (like <code>.editor__comment</code>). You can even add new classes.\",\"owner\":\"dvkndn\",\"noCSS\":true},\"file-highlight\":{\"title\":\"File Highlight\",\"description\":\"Fetch external files and highlight them with Prism. Used on the Prism website itself.\",\"noCSS\":true},\"show-language\":{\"title\":\"Show Language\",\"description\":\"Display the highlighted language in code blocks (inline code does not show the label).\",\"owner\":\"nauzilus\",\"noCSS\":true,\"require\":\"toolbar\"},\"jsonp-highlight\":{\"title\":\"JSONP Highlight\",\"description\":\"Fetch content with JSONP and highlight some interesting content (e.g. GitHub/Gists or Bitbucket API).\",\"noCSS\":true,\"owner\":\"nauzilus\"},\"highlight-keywords\":{\"title\":\"Highlight Keywords\",\"description\":\"Adds special CSS classes for each keyword matched in the code. For example, the keyword <code>if</code> will have the class <code>keyword-if</code> as well. You can have fine grained control over the appearance of each keyword by providing your own CSS rules.\",\"owner\":\"vkbansal\",\"noCSS\":true},\"remove-initial-line-feed\":{\"title\":\"Remove initial line feed\",\"description\":\"Removes the initial line feed in code blocks.\",\"owner\":\"Golmote\",\"noCSS\":true},\"inline-color\":{\"title\":\"Inline color\",\"description\":\"Adds a small inline preview for colors in style sheets.\",\"require\":\"css-extras\",\"owner\":\"RunDevelopment\"},\"previewers\":{\"title\":\"Previewers\",\"description\":\"Previewers for angles, colors, gradients, easing and time.\",\"require\":\"css-extras\",\"owner\":\"Golmote\"},\"autoloader\":{\"title\":\"Autoloader\",\"description\":\"Automatically loads the needed languages to highlight the code blocks.\",\"owner\":\"Golmote\",\"noCSS\":true},\"keep-markup\":{\"title\":\"Keep Markup\",\"description\":\"Prevents custom markup from being dropped out during highlighting.\",\"owner\":\"Golmote\",\"optional\":\"normalize-whitespace\",\"noCSS\":true},\"command-line\":{\"title\":\"Command Line\",\"description\":\"Display a command line with a prompt and, optionally, the output/response from the commands.\",\"owner\":\"chriswells0\"},\"unescaped-markup\":{\"title\":\"Unescaped Markup\",\"description\":\"Write markup without having to escape anything.\"},\"normalize-whitespace\":{\"title\":\"Normalize Whitespace\",\"description\":\"Supports multiple operations to normalize whitespace in code blocks.\",\"owner\":\"zeitgeist87\",\"optional\":\"unescaped-markup\",\"noCSS\":true},\"data-uri-highlight\":{\"title\":\"Data-URI Highlight\",\"description\":\"Highlights data-URI contents.\",\"owner\":\"Golmote\",\"noCSS\":true},\"toolbar\":{\"title\":\"Toolbar\",\"description\":\"Attach a toolbar for plugins to easily register buttons on the top of a code block.\",\"owner\":\"mAAdhaTTah\"},\"copy-to-clipboard\":{\"title\":\"Copy to Clipboard Button\",\"description\":\"Add a button that copies the code block to the clipboard when clicked.\",\"owner\":\"mAAdhaTTah\",\"require\":\"toolbar\",\"noCSS\":true},\"download-button\":{\"title\":\"Download Button\",\"description\":\"A button in the toolbar of a code block adding a convenient way to download a code file.\",\"owner\":\"Golmote\",\"require\":\"toolbar\",\"noCSS\":true},\"match-braces\":{\"title\":\"Match braces\",\"description\":\"Highlights matching braces.\",\"owner\":\"RunDevelopment\"},\"diff-highlight\":{\"title\":\"Diff Highlight\",\"description\":\"Highlights the code inside diff blocks.\",\"owner\":\"RunDevelopment\",\"require\":\"diff\"},\"filter-highlight-all\":{\"title\":\"Filter highlightAll\",\"description\":\"Filters the elements the <code>highlightAll</code> and <code>highlightAllUnder</code> methods actually highlight.\",\"owner\":\"RunDevelopment\",\"noCSS\":true}}};\nif (typeof module !== 'undefined' && module.exports) { module.exports = components; }","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t? self // if in worker\n\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\nvar Prism = (function (_self){\n\n// Private helper vars\nvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\nvar uniqueId = 0;\n\n\nvar _ = {\n\tmanual: _self.Prism && _self.Prism.manual,\n\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\tutil: {\n\t\tencode: function (tokens) {\n\t\t\tif (tokens instanceof Token) {\n\t\t\t\treturn new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\treturn tokens.map(_.util.encode);\n\t\t\t} else {\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t}\n\t\t},\n\n\t\ttype: function (o) {\n\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t},\n\n\t\tobjId: function (obj) {\n\t\t\tif (!obj['__id']) {\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t}\n\t\t\treturn obj['__id'];\n\t\t},\n\n\t\t// Deep clone a language definition (e.g. to extend it)\n\t\tclone: function deepClone(o, visited) {\n\t\t\tvar clone, id, type = _.util.type(o);\n\t\t\tvisited = visited || {};\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Object':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = {};\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = [];\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\to.forEach(function (v, i) {\n\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn o;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t *\n\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t *\n\t\t * @param {Element} element\n\t\t * @returns {string}\n\t\t */\n\t\tgetLanguage: function (element) {\n\t\t\twhile (element && !lang.test(element.className)) {\n\t\t\t\telement = element.parentElement;\n\t\t\t}\n\t\t\tif (element) {\n\t\t\t\treturn (element.className.match(lang) || [, 'none'])[1].toLowerCase();\n\t\t\t}\n\t\t\treturn 'none';\n\t\t},\n\n\t\t/**\n\t\t * Returns the script element that is currently executing.\n\t\t *\n\t\t * This does __not__ work for line script element.\n\t\t *\n\t\t * @returns {HTMLScriptElement | null}\n\t\t */\n\t\tcurrentScript: function () {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ('currentScript' in document) {\n\t\t\t\treturn document.currentScript;\n\t\t\t}\n\n\t\t\t// IE11 workaround\n\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t// this will not work for inline scripts\n\n\t\t\ttry {\n\t\t\t\tthrow new Error();\n\t\t\t} catch (err) {\n\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t// A stack will look like this:\n\t\t\t\t//\n\t\t\t\t// Error\n\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):.+:.+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\tif (src) {\n\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\n\tlanguages: {\n\t\textend: function (id, redef) {\n\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\tfor (var key in redef) {\n\t\t\t\tlang[key] = redef[key];\n\t\t\t}\n\n\t\t\treturn lang;\n\t\t},\n\n\t\t/**\n\t\t * Insert a token before another token in a language literal\n\t\t * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n\t\t * we cannot just provide an object, we need an object and a key.\n\t\t * @param inside The key (or language id) of the parent\n\t\t * @param before The key to insert before.\n\t\t * @param insert Object with the key/value pairs to insert\n\t\t * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n\t\t */\n\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\troot = root || _.languages;\n\t\t\tvar grammar = root[inside];\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar old = root[inside];\n\t\t\troot[inside] = ret;\n\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn ret;\n\t\t},\n\n\t\t// Traverse a language definition with Depth First Search\n\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\tvisited = visited || {};\n\n\t\t\tvar objId = _.util.objId;\n\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\tvar property = o[i],\n\t\t\t\t\t    propertyType = _.util.type(property);\n\n\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t}\n\t\t\t\t\telse if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tplugins: {},\n\n\thighlightAll: function(async, callback) {\n\t\t_.highlightAllUnder(document, async, callback);\n\t},\n\n\thighlightAllUnder: function(container, async, callback) {\n\t\tvar env = {\n\t\t\tcallback: callback,\n\t\t\tcontainer: container,\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t};\n\n\t\t_.hooks.run('before-highlightall', env);\n\n\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\tfor (var i = 0, element; element = env.elements[i++];) {\n\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t}\n\t},\n\n\thighlightElement: function(element, async, callback) {\n\t\t// Find language\n\t\tvar language = _.util.getLanguage(element);\n\t\tvar grammar = _.languages[language];\n\n\t\t// Set language on the element, if not present\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\t// Set language on the parent, for styling\n\t\tvar parent = element.parentNode;\n\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t}\n\n\t\tvar code = element.textContent;\n\n\t\tvar env = {\n\t\t\telement: element,\n\t\t\tlanguage: language,\n\t\t\tgrammar: grammar,\n\t\t\tcode: code\n\t\t};\n\n\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t}\n\n\t\t_.hooks.run('before-sanity-check', env);\n\n\t\tif (!env.code) {\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t\treturn;\n\t\t}\n\n\t\t_.hooks.run('before-highlight', env);\n\n\t\tif (!env.grammar) {\n\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\treturn;\n\t\t}\n\n\t\tif (async && _self.Worker) {\n\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\tworker.onmessage = function(evt) {\n\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t};\n\n\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\tlanguage: env.language,\n\t\t\t\tcode: env.code,\n\t\t\t\timmediateClose: true\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t}\n\t},\n\n\thighlight: function (text, grammar, language) {\n\t\tvar env = {\n\t\t\tcode: text,\n\t\t\tgrammar: grammar,\n\t\t\tlanguage: language\n\t\t};\n\t\t_.hooks.run('before-tokenize', env);\n\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t_.hooks.run('after-tokenize', env);\n\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t},\n\n\tmatchGrammar: function (text, strarr, grammar, index, startPos, oneshot, target) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (target && target == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar pattern = patterns[j],\n\t\t\t\t\tinside = pattern.inside,\n\t\t\t\t\tlookbehind = !!pattern.lookbehind,\n\t\t\t\t\tgreedy = !!pattern.greedy,\n\t\t\t\t\tlookbehindLength = 0,\n\t\t\t\t\talias = pattern.alias;\n\n\t\t\t\tif (greedy && !pattern.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = pattern.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpattern.pattern = RegExp(pattern.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\tpattern = pattern.pattern || pattern;\n\n\t\t\t\t// Don’t cache length as it changes during the loop\n\t\t\t\tfor (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n\n\t\t\t\t\tvar str = strarr[i];\n\n\t\t\t\t\tif (strarr.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (greedy && i != strarr.length - 1) {\n\t\t\t\t\t\tpattern.lastIndex = pos;\n\t\t\t\t\t\tvar match = pattern.exec(text);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index + (lookbehind && match[1] ? match[1].length : 0),\n\t\t\t\t\t\t    to = match.index + match[0].length,\n\t\t\t\t\t\t    k = i,\n\t\t\t\t\t\t    p = pos;\n\n\t\t\t\t\t\tfor (var len = strarr.length; k < len && (p < to || (!strarr[k].type && !strarr[k - 1].greedy)); ++k) {\n\t\t\t\t\t\t\tp += strarr[k].length;\n\t\t\t\t\t\t\t// Move the index i to the element in strarr that is closest to from\n\t\t\t\t\t\t\tif (from >= p) {\n\t\t\t\t\t\t\t\t++i;\n\t\t\t\t\t\t\t\tpos = p;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (strarr[i] instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Number of tokens to delete and replace with the new match\n\t\t\t\t\t\tdelNum = k - i;\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpattern.lastIndex = 0;\n\n\t\t\t\t\t\tvar match = pattern.exec(str),\n\t\t\t\t\t\t\tdelNum = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tif (oneshot) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(lookbehind) {\n\t\t\t\t\t\tlookbehindLength = match[1] ? match[1].length : 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar from = match.index + lookbehindLength,\n\t\t\t\t\t    match = match[0].slice(lookbehindLength),\n\t\t\t\t\t    to = from + match.length,\n\t\t\t\t\t    before = str.slice(0, from),\n\t\t\t\t\t    after = str.slice(to);\n\n\t\t\t\t\tvar args = [i, delNum];\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\t++i;\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t\targs.push(before);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar wrapped = new Token(token, inside? _.tokenize(match, inside) : match, alias, match, greedy);\n\n\t\t\t\t\targs.push(wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\targs.push(after);\n\t\t\t\t\t}\n\n\t\t\t\t\tArray.prototype.splice.apply(strarr, args);\n\n\t\t\t\t\tif (delNum != 1)\n\t\t\t\t\t\t_.matchGrammar(text, strarr, grammar, i, pos, true, token + ',' + j);\n\n\t\t\t\t\tif (oneshot)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\ttokenize: function(text, grammar) {\n\t\tvar strarr = [text];\n\n\t\tvar rest = grammar.rest;\n\n\t\tif (rest) {\n\t\t\tfor (var token in rest) {\n\t\t\t\tgrammar[token] = rest[token];\n\t\t\t}\n\n\t\t\tdelete grammar.rest;\n\t\t}\n\n\t\t_.matchGrammar(text, strarr, grammar, 0, 0, false);\n\n\t\treturn strarr;\n\t},\n\n\thooks: {\n\t\tall: {},\n\n\t\tadd: function (name, callback) {\n\t\t\tvar hooks = _.hooks.all;\n\n\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\thooks[name].push(callback);\n\t\t},\n\n\t\trun: function (name, env) {\n\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\n\t\t\t\tcallback(env);\n\t\t\t}\n\t\t}\n\t},\n\n\tToken: Token\n};\n\n_self.Prism = _;\n\nfunction Token(type, content, alias, matchedStr, greedy) {\n\tthis.type = type;\n\tthis.content = content;\n\tthis.alias = alias;\n\t// Copy of the full string this token was created from\n\tthis.length = (matchedStr || '').length|0;\n\tthis.greedy = !!greedy;\n}\n\nToken.stringify = function(o, language) {\n\tif (typeof o == 'string') {\n\t\treturn o;\n\t}\n\n\tif (Array.isArray(o)) {\n\t\treturn o.map(function(element) {\n\t\t\treturn Token.stringify(element, language);\n\t\t}).join('');\n\t}\n\n\tvar env = {\n\t\ttype: o.type,\n\t\tcontent: Token.stringify(o.content, language),\n\t\ttag: 'span',\n\t\tclasses: ['token', o.type],\n\t\tattributes: {},\n\t\tlanguage: language\n\t};\n\n\tif (o.alias) {\n\t\tvar aliases = Array.isArray(o.alias) ? o.alias : [o.alias];\n\t\tArray.prototype.push.apply(env.classes, aliases);\n\t}\n\n\t_.hooks.run('wrap', env);\n\n\tvar attributes = Object.keys(env.attributes).map(function(name) {\n\t\treturn name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t}).join(' ');\n\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';\n};\n\nif (!_self.document) {\n\tif (!_self.addEventListener) {\n\t\t// in Node.js\n\t\treturn _;\n\t}\n\n\tif (!_.disableWorkerMessageHandler) {\n\t\t// In worker\n\t\t_self.addEventListener('message', function (evt) {\n\t\t\tvar message = JSON.parse(evt.data),\n\t\t\t\tlang = message.language,\n\t\t\t\tcode = message.code,\n\t\t\t\timmediateClose = message.immediateClose;\n\n\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\tif (immediateClose) {\n\t\t\t\t_self.close();\n\t\t\t}\n\t\t}, false);\n\t}\n\n\treturn _;\n}\n\n//Get current script and highlight\nvar script = _.util.currentScript();\n\nif (script) {\n\t_.filename = script.src;\n\n\tif (script.hasAttribute('data-manual')) {\n\t\t_.manual = true;\n\t}\n}\n\nif (!_.manual) {\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t// See https://github.com/PrismJS/prism/issues/2102\n\tvar readyState = document.readyState;\n\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t} else {\n\t\tif (window.requestAnimationFrame) {\n\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t}\n\t}\n}\n\nreturn _;\n\n})(_self);\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': /<!--[\\s\\S]*?-->/,\n\t'prolog': /<\\?[\\s\\S]+?\\?>/,\n\t'doctype': {\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:(?!<!--)[^\"'\\]]|\"[^\"]*\"|'[^']*'|<!--[\\s\\S]*?-->)*\\]\\s*)?>/i,\n\t\tgreedy: true\n\t},\n\t'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t/^=/,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': /&#?[\\da-z]{1,8};/i\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function(env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, tagName), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-]+[\\s\\S]*?(?:;|(?=\\s*\\{))/,\n\t\t\tinside: {\n\t\t\t\t'rule': /@[\\w-]+/\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\tpattern: RegExp('url\\\\((?:' + string.source + '|[^\\n\\r()]*)\\\\)', 'i'),\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/\n\t\t\t}\n\t\t},\n\t\t'selector': RegExp('[^{}\\\\s](?:[^{};\"\\']|' + string.source + ')*?(?=\\\\s*\\\\{)'),\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n\t\t'important': /!important\\b/i,\n\t\t'function': /[-a-z0-9]+(?=\\()/i,\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\n\t\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t\t'style-attr': {\n\t\t\t\tpattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'attr-name': {\n\t\t\t\t\t\tpattern: /^\\s*style/i,\n\t\t\t\t\t\tinside: markup.tag.inside\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\tpattern: /.+/i,\n\t\t\t\t\t\tinside: Prism.languages.css\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\talias: 'language-css'\n\t\t\t}\n\t\t}, markup.tag);\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'function': /\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.])\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&|\\|\\||[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?[.?]?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=\\s*(?:$|[\\r\\n,.;})\\]]))/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\${|}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\tif (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {\n\t\treturn;\n\t}\n\n\t/**\n\t * @param {Element} [container=document]\n\t */\n\tself.Prism.fileHighlight = function(container) {\n\t\tcontainer = container || document;\n\n\t\tvar Extensions = {\n\t\t\t'js': 'javascript',\n\t\t\t'py': 'python',\n\t\t\t'rb': 'ruby',\n\t\t\t'ps1': 'powershell',\n\t\t\t'psm1': 'powershell',\n\t\t\t'sh': 'bash',\n\t\t\t'bat': 'batch',\n\t\t\t'h': 'c',\n\t\t\t'tex': 'latex'\n\t\t};\n\n\t\tArray.prototype.slice.call(container.querySelectorAll('pre[data-src]')).forEach(function (pre) {\n\t\t\t// ignore if already loaded\n\t\t\tif (pre.hasAttribute('data-src-loaded')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// load current\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language, parent = pre;\n\t\t\tvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n\t\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\t\tparent = parent.parentNode;\n\t\t\t}\n\n\t\t\tif (parent) {\n\t\t\t\tlanguage = (pre.className.match(lang) || [, ''])[1];\n\t\t\t}\n\n\t\t\tif (!language) {\n\t\t\t\tvar extension = (src.match(/\\.(\\w+)$/) || [, ''])[1];\n\t\t\t\tlanguage = Extensions[extension] || extension;\n\t\t\t}\n\n\t\t\tvar code = document.createElement('code');\n\t\t\tcode.className = 'language-' + language;\n\n\t\t\tpre.textContent = '';\n\n\t\t\tcode.textContent = 'Loading…';\n\n\t\t\tpre.appendChild(code);\n\n\t\t\tvar xhr = new XMLHttpRequest();\n\n\t\t\txhr.open('GET', src, true);\n\n\t\t\txhr.onreadystatechange = function () {\n\t\t\t\tif (xhr.readyState == 4) {\n\n\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\t\tcode.textContent = xhr.responseText;\n\n\t\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t\t\t// mark as loaded\n\t\t\t\t\t\tpre.setAttribute('data-src-loaded', '');\n\t\t\t\t\t}\n\t\t\t\t\telse if (xhr.status >= 400) {\n\t\t\t\t\t\tcode.textContent = '✖ Error ' + xhr.status + ' while fetching file: ' + xhr.statusText;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcode.textContent = '✖ Error: File does not exist or is empty';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\txhr.send(null);\n\t\t});\n\t};\n\n\tdocument.addEventListener('DOMContentLoaded', function () {\n\t\t// execute inside handler, for dropping Event as argument\n\t\tself.Prism.fileHighlight();\n\t});\n\n})();\n","let prism = require('prismjs');\nlet loadLanguage = require('prismjs/components');\nconst textArea = document.getElementById('ta-code');\n\nlet code = document.getElementById('code').innerHTML;\n\nconst html = Prism.highlight(code, Prism.languages.html, 'html');\ntextArea.value = code;\ndocument.getElementById('output').innerHTML = html;\n\ntextArea.addEventListener('input', (event) => {\n  let value = event.target.value;\n  const html = Prism.highlight(value, Prism.languages.html, 'html');\n  document.getElementById('output').innerHTML = html;\n\n  let code = document.getElementById('code');\n  const parser = new DOMParser();\n  const el = parser.parseFromString(value, 'image/svg+xml');\n  code.innerHTML = '';\n  code.appendChild(el.documentElement);\n});"]}